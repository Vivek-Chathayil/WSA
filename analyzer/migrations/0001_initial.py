# Generated by Django 5.2.4 on 2025-07-28 06:30

import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DatasetAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Analysis name/description', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the analysis')),
                ('total_reviews', models.IntegerField(help_text='Total number of reviews processed')),
                ('positive_count', models.IntegerField(default=0, help_text='Number of positive reviews')),
                ('negative_count', models.IntegerField(default=0, help_text='Number of negative reviews')),
                ('neutral_count', models.IntegerField(default=0, help_text='Number of neutral reviews')),
                ('original_filename', models.CharField(help_text='Original uploaded filename', max_length=255)),
                ('file_size', models.BigIntegerField(help_text='File size in bytes')),
                ('processing_time', models.FloatField(blank=True, help_text='Processing time in seconds', null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('excel_report', models.CharField(blank=True, help_text='Path to generated Excel report file', max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Dataset Analysis',
                'verbose_name_plural': 'Dataset Analyses',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['created_at'], name='analyzer_da_created_b8fdd5_idx'), models.Index(fields=['total_reviews'], name='analyzer_da_total_r_6019df_idx'), models.Index(fields=['original_filename'], name='analyzer_da_origina_74ee50_idx')],
            },
        ),
        migrations.CreateModel(
            name='SentimentAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Original text analyzed')),
                ('summary', models.CharField(blank=True, help_text='Summary if available', max_length=500)),
                ('negative_score', models.FloatField(help_text='Negative sentiment score (0.0 to 1.0)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('neutral_score', models.FloatField(help_text='Neutral sentiment score (0.0 to 1.0)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('positive_score', models.FloatField(help_text='Positive sentiment score (0.0 to 1.0)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('dominant_sentiment', models.CharField(choices=[('positive', 'Positive'), ('negative', 'Negative'), ('neutral', 'Neutral')], help_text='The sentiment with the highest score', max_length=20)),
                ('confidence', models.FloatField(help_text='Confidence level of the dominant sentiment', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Sentiment Analysis',
                'verbose_name_plural': 'Sentiment Analyses',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['dominant_sentiment'], name='analyzer_se_dominan_ade6f5_idx'), models.Index(fields=['created_at'], name='analyzer_se_created_919a5b_idx'), models.Index(fields=['confidence'], name='analyzer_se_confide_479351_idx'), models.Index(fields=['dominant_sentiment', 'created_at'], name='analyzer_se_dominan_84e36e_idx')],
            },
        ),
    ]
